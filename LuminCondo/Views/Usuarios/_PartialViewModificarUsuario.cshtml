@model Infraestructure.Models.Usuarios

@{
    ViewBag.Title = "Editar Usuario";
}

<div data-aos="fade-up">

    <h2 class="text-center">@ViewBag.Title</h2>
    @using (Html.BeginForm("Guardar", "Usuarios", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Usuarios</h4>
            <hr />

            @Html.HiddenFor(model => model.ID)

            <div class="form-group">
                @Html.LabelFor(model => model.nombre, htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.contrasenna, htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="input-group mb-2 rounded">
                    @Html.EditorFor(model => model.contrasenna, new { htmlAttributes = new { @class = "form-control", type = "password", id = "contrasenna", placeholder = "Contraseña" } })
                    <button class="btn btn-primary " onclick="togglePassword()"><i id="toggleIcon" class="fa-solid fa-eye"></i></button>
                    @Html.ValidationMessageFor(model => model.contrasenna, "", new { @class = "text-danger" })
                </div>


            </div>

            <div class="col">
                <div class="form-group">
                    @Html.LabelFor(model => model.IDTipoUsuario, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-12">
                        @Html.DropDownListFor(model => model.IDTipoUsuario,
                       (SelectList)ViewBag.IDTipodeUsuarios,
                       "Seleccione un Tipo de Usuario",
                       htmlAttributes: new { @class = "form-control" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.estado, htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-12">
                    <div class="btn-group" data-toggle="buttons">
                        <label class="@Html.Raw((Model.estado == true) ? "active" : "")">
                            @Html.RadioButtonFor(model => model.estado, true) Activo  |
                        </label>
                        <label class="@Html.Raw((Model.estado == false) ? "active" : "")">
                            | @Html.RadioButtonFor(model => model.estado, false) Inactivo
                        </label>
                    </div>
                    @Html.ValidationMessageFor(model => model.estado, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.telefono, htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.telefono, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.telefono, "", new { @class = "text-danger" })
                </div>
            </div>
            <hr />
            <div class="form-group">
                <div class="btn-group" role="group">
                    <button class="btn btn-primary" onclick="GuardarUsuario()"><i class="fa-solid fa-plus"></i> Actualizar Usuario</button>
                </div>
            </div>
        </div>
    }
</div>


<script>
    function togglePassword() {
        event.preventDefault();
        var input = document.getElementById("contrasenna");
        var icon = document.getElementById("toggleIcon");
        if (input.type === "password") {
            input.type = "text";
            icon.classList.remove("fa-eye");
            icon.classList.add("fa-eye-slash");
        } else {
            input.type = "password";
            icon.classList.remove("fa-eye-slash");
            icon.classList.add("fa-eye");
        }
    }
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
